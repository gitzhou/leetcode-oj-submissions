// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Remove Nth Node From End of List
// https://leetcode.com/problems/remove-nth-node-from-end-of-list/
// 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *removeNthFromEnd(ListNode *head, int n) {
        vector<ListNode *> ps;
        ListNode *p = head;
        while (p != NULL) {
            ps.push_back(p);
            p = p->next;
        }
        if (n == ps.size()) {
            if (ps.size() == 1) {
                return NULL;
            }
            return ps[1];
        }
        p = ps[ps.size() - n];
        ListNode *pre = ps[ps.size() - n - 1];
        pre->next = p->next;
        return head;
    }
};

