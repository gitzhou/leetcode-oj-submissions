// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Flatten Binary Tree to Linked List
// https://leetcode.com/problems/flatten-binary-tree-to-linked-list/
// 

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode *root) {
        if (root == NULL) {
            return;
        }
        flatten(root->left);
        flatten(root->right);
        
        if (root->left != NULL) {
            TreeNode *rightSubTree = root->right;
            root->right = root->left;
            root->left = NULL;
            TreeNode *p = root->right;
            while (p != NULL && p->right != NULL) {
                p = p->right;
            }
            p->right = rightSubTree;
        }
    }
};

