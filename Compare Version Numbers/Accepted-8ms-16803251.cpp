// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Compare Version Numbers
// https://leetcode.com/problems/compare-version-numbers/
// 

class Solution {
public:
    int compareVersion(string version1, string version2) {
        return cmpVersion(version1, 0, version2, 0);
    }
    
private:
    int cmpVersion(const string &v1, string::size_type pos1, const string &v2, string::size_type pos2) {
        if (pos1 == string::npos && pos2 == string::npos) {
            return 0;
        }
        long pv1 = getPartValue(v1, pos1), pv2 = getPartValue(v2, pos2);
        if (pv1 == pv2) {
            return cmpVersion(v1, pos1, v2, pos2);
        }
        return pv1 > pv2? 1: -1;
    }
    
    long getPartValue(const string &s, string::size_type &p) {
        long value = 0;
        if (p != string::npos) {
            string::size_type pos = s.find_first_of('.', p);
            if (pos == string::npos) {
                value = stringToLong(s.substr(p));
                p = pos;
            } else {
                value = stringToLong(s.substr(p, pos - p));
                p = pos + 1;
            }
        }
        return value;
    }
    
    long stringToLong(const string &str) {
        stringstream ss(str);
        long result;
        ss >> result;
        return result;
    }
};

