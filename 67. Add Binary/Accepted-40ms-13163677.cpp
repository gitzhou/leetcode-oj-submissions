// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// 67. Add Binary
// https://leetcode.com/problems/add-binary/
// 

class MinusCharZero {
public:
    char operator()(char ch) {
        return ch -= '0';
    }
};

class PlusCharZero {
public:
    char operator()(char ch) {
        return ch += '0';
    }
};

class Solution {
public:
    string addBinary(string a, string b) {
        string result;
        if (a.length() != 0 && b.length() != 0) {
            vector<int> va(a.length()), vb(b.length());
            vector<int> vresult((a.length() > b.length()? a.length(): b.length()) + 1, 0);
            // 减字符'0'并倒置
            transform(a.begin(), a.end(), va.rbegin(), MinusCharZero());
            transform(b.begin(), b.end(), vb.rbegin(), MinusCharZero());
            // 做加法
            long i = 0;
            while (i < va.size() && i < vb.size()) {
                vresult[i] = va[i] + vb[i];
                ++i;
            }
            while (i < va.size()) {
                vresult[i] = va[i];
                ++i;
            }
            while (i < vb.size()) {
                vresult[i] = vb[i];
                ++i;
            }
            // 统一进位
            int carry = 0;
            i = 0;
            while (i < vresult.size()) {
                vresult[i] += carry;
                carry = vresult[i] / 2;
                vresult[i] %= 2;
                ++i;
            }
            // 定位到第一个非零数字
            while (--i >= 0 && vresult[i] == 0) ;
            if (i == -1) {
                i = 0;
            }
            // 加字符'0'并倒置
            result.resize(++i);
            transform(vresult.begin(), vresult.begin() + i, result.rbegin(), PlusCharZero());
        }
        return result;
    }
};

// 
// Given two binary strings, return their sum (also a binary string). For example, a = "11" b = "1" Return "100". Subscribe to see which companies asked this question Show Tags Math String Show Similar Problems (M) Add Two Numbers (M) Multiply Strings (E) Plus One
// 
