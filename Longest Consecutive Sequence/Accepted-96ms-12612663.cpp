// 
// Generated by FetchLeetcodeSubmission Project on GitCafe.
// Visit https://gitcafe.com/aaronzhou/FetchLeetcodeSubmission for more information.
// Contact Me: aaron67[AT]aaron67.cc
// 
// Longest Consecutive Sequence
// https://oj.leetcode.com/problems/longest-consecutive-sequence/
// 

class Solution {
public:
    int longestConsecutive(vector<int> &num) {
        set<int> s(num.begin(), num.end());
        set<int>::iterator it = s.begin();
        int length = 1, preval = *it;
        int max = 1;
        while (++it != s.end()) {
            if (preval + 1 == *it) {
                ++length;
            } else {
                length = 1;
            }
            if (length > max) {
                max = length;
            }
            preval = *it;
        }
        return max;
    }
};

// 
// Given an unsorted array of integers, find the length of the longest consecutive elements sequence. 
// For example, 
// Given [100, 4, 200, 1, 3, 2], 
// The longest consecutive elements sequence is [1, 2, 3, 4]. 
// Return its length: 4. 
// Your algorithm should run in 
// O(n) complexity.
// 
