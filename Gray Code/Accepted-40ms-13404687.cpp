// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Gray Code
// https://leetcode.com/problems/gray-code/
// 

class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> result, gray(n, 0);
        dfs(result, gray, 0);
        return result;
    }
    
private:
    void dfs(vector<int> &result, vector<int> &gray, int i) {
        if (i == gray.size()) {
            int dec = binaryToDecimal(gray);
            result.push_back(dec / 2 ^ dec);
            return;
        }
        gray[i] = 0;
        dfs(result, gray, i + 1);
        gray[i] = 1;
        dfs(result, gray, i + 1);
    }
    
    int binaryToDecimal(const vector<int> &v) {
        int result = 0, two = 1;
        for (int i = (int)(v.size() - 1); i >= 0; --i, two *= 2) {
            result += v[i] * two;
        }
        return result;
    }
};

