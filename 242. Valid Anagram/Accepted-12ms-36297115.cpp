// 
// Generated by FetchLeetcodeSubmission Project on GitCafe.
// Visit https://gitcafe.com/aaronzhou/FetchLeetcodeSubmission for more information.
// Contact Me: aaron67[AT]aaron67.cc
// 
// 242. Valid Anagram
// https://leetcode.com/problems/valid-anagram/
// 

class Solution {
public:
    bool isAnagram(string s, string t) {
        if (s.length() != t.length()) {
            return false;
        }
        vector<int> count(26, 0);
        int length = (int)s.length();
        for (int i = 0; i < length; ++i) {
            ++count[s[i] - 'a'];
            --count[t[i] - 'a'];
        }
        for (int i = 0; i < count.size(); ++i) {
            if (count[i] != 0) {
                return false;
            }
        }
        return true;
    }
};

// 
// Given two strings s and t, write a function to determine if t is an anagram of s. For example, s = "anagram", t = "nagaram", return true. s = "rat", t = "car", return false. Note: You may assume the string contains only lowercase alphabets. Follow up: What if the inputs contain unicode characters? How would you adapt your solution to such case? Subscribe to see which companies asked this question Show Tags Hash Table Sort Show Similar Problems (M) Group Anagrams (E) Palindrome Permutation
// 
