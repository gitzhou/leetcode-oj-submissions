// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Sum Root to Leaf Numbers
// https://leetcode.com/problems/sum-root-to-leaf-numbers/
// 

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode *root) {
        int current = 0, sum = 0;
        preOrderTraversal(root, current, sum);
        return sum;
    }
    
private:
    void preOrderTraversal(TreeNode *node, int &current, int &sum) {
        if (node == NULL) {
            return;
        }
        current = current * 10 + node->val;
        if (node->left == NULL && node->right == NULL) {
            sum += current;
        } else {
            preOrderTraversal(node->left, current, sum);
            preOrderTraversal(node->right, current, sum);
        }
        current = (current - node->val ) / 10;
    }
};

