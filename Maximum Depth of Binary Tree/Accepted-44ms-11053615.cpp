// 
// Generated by FetchLeetcodeSubmission Project on GitCafe.
// Visit https://gitcafe.com/aaronzhou/FetchLeetcodeSubmission for more information.
// Contact Me: aaron67[AT]aaron67.cc
// 
// Maximum Depth of Binary Tree
// https://oj.leetcode.com/problems/maximum-depth-of-binary-tree/
// 

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
public:
    int maxDepth(TreeNode *root) {
        int depth = 0, currentDepth = 0;
        inOrderTraversal(root, depth, currentDepth);
        return depth;
    }
    
private:
    void inOrderTraversal(TreeNode *node, int &depth, int currentDepth) {
        if (node == NULL) {
            return;
        }
        if (++currentDepth > depth) {
            depth = currentDepth;
        }
        inOrderTraversal(node->left, depth, currentDepth);
        inOrderTraversal(node->right, depth, currentDepth);
    }
};

// 
// Given a binary tree, find its maximum depth. 
// The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
// 
